pipeline {
  agent any;



  stages {
   stage("GIT") {
     steps {
       sh 'git checkout yassin'
       sh 'git pull origin yassin'
      }
    }
//     //
   stage("MAVEN BUILD") {
      steps {
      dir('gestion-station-ski'){
       sh 'mvn clean install -Dmaven.test.skip=true'
      }}
   }
   stage("SONARQUBE") {
         steps {
            	dir('gestion-station-ski'){
         sh "mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=azerty123"
        }}
      }
        stage("MOCKITO") {
                steps {
                    	dir('gestion-station-ski'){
                sh "mvn test -Dtest=tn.esprit.spring.services.SkierServiceImpMock"
                }}
              }
//     stage("MOCKITO") {
//       steps {
//       dir('gestion-station-ski'){
//         sh "mvn test -Dtest=tn.esprit.spring.services.SkierServiceImpMock"
//       }}
//     }
/*stage('MVN NEXUS')
        {
        steps {
        dir('gestion-station-ski'){
        sh 'mvn  deploy -DskipTests  '
        }}
        }*/
        //
stage("build docker image") {
                            steps {
                             dir('gestion-station-ski'){
                              sh 'docker build -t yassinekoch/yassine-kochkache-sae4-gestion-station-ski:latest .'
                            }
                          }}
                       /*   stage('Build and Push Docker Image') {
                                     steps {
                                         script {
                                             withCredentials([usernamePassword(credentialsId: 'dockerhub-yassinekochkache', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                                                 DOCKER_USERNAME = 'yassinekochkache'
                                                 DOCKER_PASSWORD = 'azerty123'

                                                 sh "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD docker.io"
                                                 sh "docker push yassinekochkache/yassine-kochkache-grp01-gestion-station-ski:latest"
                                             }
                                         }
                                     }
                                 }
*/

/*stage('Deploy Docker Image') {
        steps {
         dir('gestion-station-ski') {
         withCredentials([string(credentialsId: 'dockerhub-pwd', variable: 'dockerhubpwd')]) {
            sh '''
              docker login -u yassinekochkache -p $DOCKER_PASSWORD
              docker push yassinekochkache/yassine-kochkache-grp01-gestion-station-ski:latest
            '''
          }
        }}
      }*/
      //
stage('docker push'){
                   steps{
                         dir('gestion-station-ski') {
                         withCredentials([string(credentialsId: 'dockerhub-pwd', variable: 'dockerhubpwd')]){

                           sh 'docker login -u yassinekoch -p ${dockerhubpwd}'
                           sh 'docker push yassinekoch/yassine-kochkache-sae4-gestion-station-ski:latest'
                       }}
                   }
               }
/*stage('docker compose') {
              steps{
                    dir('gestion-station-ski') {

                  sh 'docker compose up -d'
              }}
          }*/

// stage("Docker Login") {
//             steps {
//             dir('gestion-station-ski'){
//                 withCredentials([usernamePassword(credentialsId: 'DOCKER', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
//                     sh "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
//                 }
//             }}
//         }
//          stage("Push Image to Docker Hub") {
//             steps {
//             dir('gestion-station-ski'){
//                 sh 'docker push yassinekoch/yassine-kochkache-sae4-gestion-station-ski:latest'
//             }}
//         }


}


}